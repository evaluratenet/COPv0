name: Deploy to Render

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd ai_service
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd ai_service
        python -m pytest tests/ -v
    
    - name: Lint code
      run: |
        cd ai_service
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check .

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: github/codeql-action/init@v2
      with:
        languages: python, javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  deploy-staging:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
    - name: Deploy to Staging
      run: |
        echo "Deploying to staging environment..."
        # Render will auto-deploy from GitHub
        # This step can be used for additional staging-specific tasks

  deploy-production:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to Production
      run: |
        echo "Deploying to production environment..."
        # Render will auto-deploy from GitHub
        # This step can be used for additional production-specific tasks

  notify:
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-staging.result }}" == "success" ] || [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "Deployment successful!"
        else
          echo "Deployment failed!"
        fi 